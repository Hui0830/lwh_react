(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{127:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.attributes=void 0,t.default=function(){return i.default.createElement("div",null,i.default.createElement("h3",null,"属性"),i.default.createElement("table",null,i.default.createElement("thead",null,i.default.createElement("tr",null,i.default.createElement("th",null,"参数"),i.default.createElement("th",null,"类型"),i.default.createElement("th",null,"默认值"),i.default.createElement("th",null,"作用"),i.default.createElement("th",null,"其他"))),i.default.createElement("tbody",null,i.default.createElement("tr",null,i.default.createElement("td",null,"size"),i.default.createElement("td",null,"string"),i.default.createElement("td",null,"default"),i.default.createElement("td",null,"组件大小，可选值为 small default large"),i.default.createElement("td",null,"默认不设置为default")),i.default.createElement("tr",null,i.default.createElement("td",null,"spinning"),i.default.createElement("td",null,"boolean"),i.default.createElement("td",null,"true"),i.default.createElement("td",null,"是否为加载中状态"),i.default.createElement("td",null,"状态props")),i.default.createElement("tr",null,i.default.createElement("td",null,"tip"),i.default.createElement("td",null,"string"),i.default.createElement("td",null,"---"),i.default.createElement("td",null,"加载中状态文字提示描述"),i.default.createElement("td",null,"---")),i.default.createElement("tr",null,i.default.createElement("td",null,"style"),i.default.createElement("td",null,"object"),i.default.createElement("td",null,"---"),i.default.createElement("td",null,"定义行内样式"),i.default.createElement("td",null,"---")))))};var l,a=n(1),i=(l=a)&&l.__esModule?l:{default:l};t.attributes={}},128:function(e,t,n){},34:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l=m(n(49)),a=m(n(53)),i=m(n(54)),d=m(n(55)),u=m(n(56)),r=m(n(1)),s=m(n(45)),c=m(n(70)),f=m(n(127));n(128);var o=m(n(10));function m(e){return e&&e.__esModule?e:{default:e}}var p=function(e){var t=e.title,n=e.code;return r.default.createElement("div",{className:"code-container"},t&&r.default.createElement("p",{className:"code-title"},t),r.default.createElement("code",null,n))},g=[{title:"大小size拥有small、default、large三种取值。",code:'\n        <div>\n            <span>简单设置大小spinning用法：</span>\n            <Spin spinning size="small" style={{ marginRight: 30 }}/>\n            <Spin spinning style={{ marginRight: 30 }}/>\n            <Spin spinning size="large"/>\n        </div>\n        '},{code:"\n        class SpinDemo extends React.PureComponent {\n            state = {\n                spinning: false\n            }\n            toggle = () => {\n                this.setState({ spinning: !this.state.spinning });\n            }\n            render() {\n                const { spinning } = this.state; \n                return(\n                    <div className=\"spin-demo\">\n                        <Spin spinning={spinning}>\n                            <div className=\"lwh-demo-container\">\n                                <h2>作为容器进行加载</h2>\n                                <div>可以直接把内容内嵌到 Spin 中，将现有容器变为加载状态。</div>\n                            </div>\n                        </Spin>\n                        <div>加载状态：\n                            <Button\n                                style={{width: 100, marginTop: 20}}\n                                onClick={this.toggle}>{spinning ? '取消' : 'loadding'}\n                            </Button>\n                        </div>\n                    </div>\n                )\n            }\n        }\n        "},{title:"设置tip。",code:'\n        class SpinDemo extends React.PureComponent {\n            state = {\n                spinning: false\n            }\n            toggle = () => {\n                this.setState({ spinning: !this.state.spinning });\n            }\n            render() {\n                const { spinning } = this.state; \n                return(\n                    <div className="spin-demo">\n                        <Spin spinning={loadding} tip="Loadding...">\n                            <div className="lwh-demo-container">\n                                <h2>设置加载状态描述</h2>\n                                <div>可以直接把内容内嵌到Spin中，将现有容器变为加载状态,设置tip加载状态描述。</div>\n                            </div>\n                        </Spin>\n                        <div>加载状态：\n                            <Button\n                                style={{width: 100, marginTop: 20}}\n                                onClick={this.toggle}>{spinning ? \'取消\' : \'loadding\'}\n                            </Button>\n                        </div>\n                    </div>\n                )\n            }\n        }\n        '}],h=function(e){function t(){var e,n,i,u;(0,a.default)(this,t);for(var r=arguments.length,s=Array(r),c=0;c<r;c++)s[c]=arguments[c];return n=i=(0,d.default)(this,(e=t.__proto__||(0,l.default)(t)).call.apply(e,[this].concat(s))),i.state={spinning:!1,loadding:!1},i.toggle=function(){i.setState({spinning:!i.state.spinning})},i.toggle1=function(){i.setState({loadding:!i.state.loadding})},u=n,(0,d.default)(i,u)}return(0,u.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){var e=this.state,t=e.spinning,n=e.loadding;return r.default.createElement("div",{className:"spin-demo"},r.default.createElement(s.default,{meta:r.default.createElement(p,g[0]),title:"加载大小展示",discript:"加载组件默认没有子组件时，为inline-block，大小size拥有small、default、large三种状态。"},r.default.createElement("span",null,"简单设置大小spinning用法："),r.default.createElement(o.default,{spinning:!0,size:"small",style:{marginRight:30}}),r.default.createElement(o.default,{spinning:!0,style:{marginRight:30}}),r.default.createElement(o.default,{spinning:!0,size:"large"})),r.default.createElement(s.default,{meta:r.default.createElement(p,g[1]),title:"作为容器加载",discript:"可以直接把内容内嵌到 Spin 中，将现有容器变为加载状态。"},r.default.createElement(o.default,{spinning:t},r.default.createElement("div",{className:"lwh-demo-container"},r.default.createElement("h2",null,"作为容器进行加载"),r.default.createElement("div",null,"可以直接把内容内嵌到 Spin 中，将现有容器变为加载状态。"))),r.default.createElement("div",null,"加载状态：",r.default.createElement(c.default,{style:{width:100,marginTop:20},onClick:this.toggle},t?"取消":"loadding"))),r.default.createElement(s.default,{meta:r.default.createElement(p,g[2]),title:"设置加载状态描述",discript:"设置加载状态文字描述：tip"},r.default.createElement(o.default,{spinning:n,tip:"Loadding..."},r.default.createElement("div",{className:"lwh-demo-container"},r.default.createElement("h2",null,"设置加载状态描述"),r.default.createElement("div",null,"可以直接把内容内嵌到Spin中，将现有容器变为加载状态,设置tip加载状态描述。"))),r.default.createElement("div",null,"加载：",r.default.createElement(c.default,{style:{width:100,marginTop:20},onClick:this.toggle1},n?"取消":"loadding"))),r.default.createElement(f.default,null))}}]),t}(r.default.PureComponent);t.default=h},45:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l=c(n(49)),a=c(n(53)),i=c(n(54)),d=c(n(55)),u=c(n(56)),r=c(n(1)),s=c(n(0));function c(e){return e&&e.__esModule?e:{default:e}}n(48);var f=function(e){function t(e){(0,a.default)(this,t);var n=(0,d.default)(this,(t.__proto__||(0,l.default)(t)).call(this,e));return n.state={show:!1,metaHeight:0},n.controlShowHandle=function(){n.setState({show:!n.state.show,metaHeight:n.meta.current.offsetHeight})},n.meta=r.default.createRef(),n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"render",value:function(){var e=this.props,t=e.children,n=e.meta,l=e.name,a=e.className,i=e.title,d=e.discript,u=this.state,s=u.show,c=u.metaHeight;return r.default.createElement("div",{className:"lwh-pirate-block "+a},i&&r.default.createElement("h3",null,i),d&&r.default.createElement("p",null,d),r.default.createElement("div",{className:"lwh-pirate-block-container "+a},r.default.createElement("div",{className:"lwh-block-source",ref:this.child},t||"未设置组件内容"),r.default.createElement("div",{className:"lwh-block-meta",style:{height:s?c:0}},r.default.createElement("div",{ref:this.meta},n)),r.default.createElement("div",{className:"lwh-block-control "+(s?"lwh-block-close":""),onClick:this.controlShowHandle},r.default.createElement("span",null,s?"隐藏"+l:"显示"+l))))}}]),t}(r.default.PureComponent);f.propTypes={meta:s.default.oneOfType([s.default.string,s.default.element,s.default.node]),name:s.default.string,title:s.default.string,discript:s.default.string,className:s.default.string},f.defaultProps={meta:r.default.createElement("div",null,"meta"),name:"代码"},t.default=f},48:function(e,t,n){},70:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l,a=n(1),i=(l=a)&&l.__esModule?l:{default:l};n(71);t.default=function(e){var t=e.disabled,n=e.type,l=e.htmlType,a=e.size,d=e.onClick,u=e.block,r=e.ghost,s=e.children,c=e.style,f="lwh-pirate-btn "+(u?"lwh-btn-block":"")+" "+(r?"lwh-btn-ghost":"");return n&&(f+=" lwh-btn-"+n),a&&(f+=" lwh-btn-"+a),i.default.createElement("button",{className:f,disabled:t,onClick:d,style:c,type:l},s)}},71:function(e,t,n){}}]);