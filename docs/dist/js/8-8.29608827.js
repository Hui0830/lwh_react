(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{124:function(e,t,n){},143:function(e,t,n){"use strict";n.r(t);var a=n(0),l=n.n(a),i=n(52),o=n(30),r=function(){return l.a.createElement("div",null,l.a.createElement("h1",null,"API"),l.a.createElement("h3",null,"Tabs属性"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"参数"),l.a.createElement("th",null,"类型"),l.a.createElement("th",null,"默认值"),l.a.createElement("th",null,"作用"),l.a.createElement("th",null,"其他"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"defaultActiveKey"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"初始化选中面板的 key，如果没有设置为第一个面板"),l.a.createElement("td",null,"初始选择的面板"),l.a.createElement("td",null,"---")),l.a.createElement("tr",null,l.a.createElement("td",null,"size"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"'default'"),l.a.createElement("td",null,"tab大小，提供 large default 和 small 三种大小"),l.a.createElement("td",null,"---")),l.a.createElement("tr",null,l.a.createElement("td",null,"onTabClick"),l.a.createElement("td",null,l.a.createElement("code",null,"Function(activeKey) ")),l.a.createElement("td",null,"---"),l.a.createElement("td",null,"tab 被点击的回调"),l.a.createElement("td",null,"接受一个参数为当前选中面板id")),l.a.createElement("tr",null,l.a.createElement("td",null,"onChange"),l.a.createElement("td",null,l.a.createElement("code",null,"Function(preActiveKey,activeKey) ")),l.a.createElement("td",null,"---"),l.a.createElement("td",null,"切换面板tab改变的回调"),l.a.createElement("td",null,"接受两个参数，第一个为改变前的选中面板id，第二个为当前选中面板id")),l.a.createElement("tr",null,l.a.createElement("td",null,"tabPosition"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"'top'"),l.a.createElement("td",null,"tabPane位置，可选值有 top right bottom left"),l.a.createElement("td",null,"---")))),l.a.createElement("h3",null,"Tabs.TabPane属性"),l.a.createElement("table",null,l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"参数"),l.a.createElement("th",null,"类型"),l.a.createElement("th",null,"默认值"),l.a.createElement("th",null,"作用"),l.a.createElement("th",null,"其他"))),l.a.createElement("tbody",null,l.a.createElement("tr",null,l.a.createElement("td",null,"key"),l.a.createElement("td",null,"string"),l.a.createElement("td",null,"---"),l.a.createElement("td",null,"对应 activeKey"),l.a.createElement("td",null,"必传的值，且需要唯一")),l.a.createElement("tr",null,l.a.createElement("td",null,"tab"),l.a.createElement("td",null,"string、ReactNode"),l.a.createElement("td",null,"tab-id"),l.a.createElement("td",null,"选项卡头显示文字"),l.a.createElement("td",null,"---")))))},c=(n(124),n(31)),m=n.n(c),s=n(32),b=n.n(s),d=n(33),u=n.n(d),E=n(34),p=n.n(E),T=n(35),h=n.n(T),v=n(37),P=function(e){function r(){var e,t,n,a;b()(this,r);for(var l=arguments.length,i=Array(l),o=0;o<l;o++)i[o]=arguments[o];return(t=n=p()(this,(e=r.__proto__||m()(r)).call.apply(e,[this].concat(i)))).state={size:"default"},a=t,p()(n,a)}return h()(r,e),u()(r,[{key:"onChangeSize",value:function(e){this.setState({size:e})}},{key:"render",value:function(){var e=this,t=this.state.size;return l.a.createElement("div",null,l.a.createElement("div",{style:{marginBottom:20}},l.a.createElement(v.a,{type:"small"==t&&"primary",onClick:function(){return e.onChangeSize("small")}},"small"),l.a.createElement(v.a,{type:"default"==t&&"primary",onClick:function(){return e.onChangeSize("default")}},"default"),l.a.createElement(v.a,{type:"large"==t&&"primary",onClick:function(){return e.onChangeSize("large")}},"large")),l.a.createElement(v.e,{size:t},l.a.createElement(v.e.TabPane,{id:"1"},l.a.createElement("div",{className:"demo-tab-content"},"tab 1")),l.a.createElement(v.e.TabPane,{id:"2"},l.a.createElement("div",{className:"demo-tab-content"},"tab 2")),l.a.createElement(v.e.TabPane,{id:"3"},l.a.createElement("div",{className:"demo-tab-content"},"tab 3")),l.a.createElement(v.e.TabPane,{id:"4"},l.a.createElement("div",{className:"demo-tab-content"},"tab 3"))))}}]),r}(a.PureComponent),y={title:"tab的简单用法，给Tab设置size可控制大小；给Tab.TabPane设置id,需要唯一",code:"\n    import React,{ PureComponent } from 'react';\n    import { Tabs,Button } from 'lwh_react';\n\n    export default class baseTabs extends PureComponent {\n        state = {\n            size: 'default'\n        }\n\n        onChangeSize(value) {\n            this.setState({\n                size: value\n            })\n        }\n\n        render() {\n            const { size } = this.state;\n            return (\n                <div>\n                    <div style={{marginBottom: 20}}>\n                        <Button type={size=='small' && 'primary'} onClick={() => this.onChangeSize('small')}>small</Button>\n                        <Button type={size=='default' && 'primary'} onClick={() => this.onChangeSize('default')}>default</Button>\n                        <Button type={size=='large' && 'primary'} onClick={() => this.onChangeSize('large')}>large</Button>\n                    </div>\n                    <Tabs size={size}>\n                        <Tabs.TabPane id=\"1\">\n                            <div className=\"demo-tab-content\">\n                                tab 1\n                            </div>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane id=\"2\">\n                            <div className=\"demo-tab-content\">\n                                tab 2\n                            </div>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane id=\"3\" >\n                            <div className=\"demo-tab-content\">\n                                tab 3\n                            </div>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane id=\"4\">\n                            <div className=\"demo-tab-content\">\n                                tab 3\n                            </div>\n                        </Tabs.TabPane>\n                    </Tabs>\n                </div>\n            )\n        }\n    }\n    "},g=function(e){function r(){var e,t,n,a;b()(this,r);for(var l=arguments.length,i=Array(l),o=0;o<l;o++)i[o]=arguments[o];return(t=n=p()(this,(e=r.__proto__||m()(r)).call.apply(e,[this].concat(i)))).state={tabPosition:"top"},a=t,p()(n,a)}return h()(r,e),u()(r,[{key:"onChangePosition",value:function(e){this.setState({tabPosition:e})}},{key:"render",value:function(){var e=this,t=this.state.tabPosition;return l.a.createElement("div",null,l.a.createElement("div",{style:{marginBottom:20}},l.a.createElement(v.a,{type:"top"==t&&"primary",onClick:function(){return e.onChangePosition("top")}},"top"),l.a.createElement(v.a,{type:"right"==t&&"primary",onClick:function(){return e.onChangePosition("right")}},"right"),l.a.createElement(v.a,{type:"bottom"==t&&"primary",onClick:function(){return e.onChangePosition("bottom")}},"bottom"),l.a.createElement(v.a,{type:"left"==t&&"primary",onClick:function(){return e.onChangePosition("left")}},"left")),l.a.createElement(v.e,{tabPosition:t},l.a.createElement(v.e.TabPane,{id:"1"},l.a.createElement("div",{className:"demo-tab-content"},"tab 1")),l.a.createElement(v.e.TabPane,{id:"2",tab:l.a.createElement("p",null,"Tab 2")},l.a.createElement("div",{className:"demo-tab-content"},"tab 2")),l.a.createElement(v.e.TabPane,{id:"3"},l.a.createElement("div",{className:"demo-tab-content"},"tab 3")),l.a.createElement(v.e.TabPane,{id:"4",tab:"这里是tab4"},l.a.createElement("div",{className:"demo-tab-content"},"tab 4"))))}}]),r}(a.PureComponent),f={title:"通过tabPosition属性可以控制tabBar的位置，可设置的值为top、left、bottom、right",code:"\n    import React,{ PureComponent } from 'react';\n    import { Tabs,Button } from 'lwh_react';\n    \n    export default class baseTabs extends PureComponent {\n        state = {\n            tabPosition: 'top'\n        }\n    \n        onChangePosition(value) {\n            this.setState({\n                tabPosition: value\n            })\n        }\n    \n        render() {\n            const { tabPosition } = this.state;\n            return (\n                <div>\n                    <div style={{marginBottom: 20}}>\n                        <Button type={tabPosition=='top' && 'primary'} onClick={() => this.onChangePosition('top')}>top</Button>\n                        <Button type={tabPosition=='right' && 'primary'} onClick={() => this.onChangePosition('right')}>right</Button>\n                        <Button type={tabPosition=='bottom' && 'primary'} onClick={() => this.onChangePosition('bottom')}>bottom</Button>\n                        <Button type={tabPosition=='left' && 'primary'} onClick={() => this.onChangePosition('left')}>left</Button>\n                    </div>\n                    <Tabs tabPosition={tabPosition}>\n                        <Tabs.TabPane id=\"1\">\n                            <div className=\"demo-tab-content\">\n                                tab 1\n                            </div>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane id=\"2\" tab={<p>Tab 2</p>}>\n                            <div className=\"demo-tab-content\">\n                                tab 2\n                            </div>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane id=\"3\" >\n                            <div className=\"demo-tab-content\">\n                                tab 3\n                            </div>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane id=\"4\" tab=\"这里是tab4\">\n                            <div className=\"demo-tab-content\">\n                                tab 4\n                            </div>\n                        </Tabs.TabPane>\n                    </Tabs>\n                </div>\n            )\n        }\n    }\n    "},C=function(){return l.a.createElement("div",null,l.a.createElement("div",{style:{marginBottom:20}},l.a.createElement("p",null,"可以自定义Pane的内容，通过给TabPane赋值tab")),l.a.createElement(v.e,{onChange:function(e,t){},onTabClick:function(e){}},l.a.createElement(v.e.TabPane,{id:"1",tab:l.a.createElement("p",null,l.a.createElement(v.c,{type:"icon_im_face"}),"开心每一天")},l.a.createElement("div",{className:"demo-tab-content"},"开心每一天")),l.a.createElement(v.e.TabPane,{id:"2",tab:l.a.createElement("p",null,l.a.createElement(v.c,{type:"icon_likegood"}),"点个赞吧")},l.a.createElement("div",{className:"demo-tab-content"},"点个赞吧")),l.a.createElement(v.e.TabPane,{id:"3",tab:l.a.createElement("p",null,l.a.createElement(v.c,{type:"icon_addresslist"}),"每日一记")},l.a.createElement("div",{className:"demo-tab-content"},"tab 3"))))},k={title:"onTabClick单击触发接受activeKey，onChange改变触发接受上一个key和当前key,tab内容可自定义",code:'\n    import React from \'react\';\n    import { Tabs,Icon } from \'lwh_react\';\n    \n    const OtherTabs = () => {\n    \n        const onTabClick = (activeKey) => {\n            console.log(\'onTabClick事件触发：\',`你单击了${activeKey}`)\n        }\n    \n        const onChange = (preKey,nextKey) => {\n            console.log(\'onChange事件触发：\',`你从tab=${preKey}转换到了${nextKey}`)\n        }\n        return (\n            <div>\n                <div style={{marginBottom: 20}}>\n                    <p>\n                        可以自定义Pane的内容，通过给TabPane赋值tab\n                    </p>\n                </div>\n                <Tabs onChange={onChange} onTabClick={onTabClick}>\n                    <Tabs.TabPane id="1" tab={<p><Icon type="icon_im_face" />开心每一天</p>}>\n                        <div className="demo-tab-content">\n                            开心每一天\n                        </div>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane id="2" tab={<p><Icon type="icon_likegood" />点个赞吧</p>}>\n                        <div className="demo-tab-content">\n                            点个赞吧\n                        </div>\n                    </Tabs.TabPane>\n                    <Tabs.TabPane id="3" tab={<p><Icon type="icon_addresslist" />每日一记</p>}>\n                        <div className="demo-tab-content">\n                            tab 3\n                        </div>\n                    </Tabs.TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n    export default OtherTabs\n    '};t.default=function(){return l.a.createElement("div",{className:"Tabs-demo"},l.a.createElement("h1",null,"Tabs选项卡切换组件"),l.a.createElement(o.a,{meta:l.a.createElement(i.a,y),title:"组件基础使用效果展示",discript:"通过size属性可以控制tab的大小"},l.a.createElement(P,null)),l.a.createElement(o.a,{meta:l.a.createElement(i.a,f),title:"自定义TabBar的位置，默认为top",discript:"tabPosition=’left|right|top|bottom‘。"},l.a.createElement(g,null)),l.a.createElement(o.a,{meta:l.a.createElement(i.a,k),title:"自定义tab内容和事件监听",discript:"可自行定义tab的内容，默认为tab-id。可设置onChange事件在tab改变时触发，onTabClick在单击tab时触发"},l.a.createElement(C,null)),l.a.createElement(r,null))}}}]);